{"version":3,"sources":["../../../lib/deployment/getServerlessFilePath.js"],"names":["path","require","fs","fileExists","filename","stat","lstat","isFile","error","module","exports","servicePath","filePath","join","customExists","Error","ymlFilePath","yamlFilePath","jsonFilePath","jsFilePath","tsFilePath","Promise","all","json","yml","yaml","js","ts","getServerlessFilePath"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,UAAD,CAAlB;;AAEA,MAAME,UAAU;AAAA,+BAAG,WAAOC,QAAP,EAAoB;AACrC,QAAI;AACF,YAAMC,IAAI,SAASH,EAAE,CAACI,KAAH,CAASF,QAAT,CAAnB;AACA,aAAOC,IAAI,CAACE,MAAL,EAAP;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACd,aAAO,KAAP;AACD;AACF,GAPe;;AAAA,kBAAVL,UAAU;AAAA;AAAA;AAAA,GAAhB;;AASAM,MAAM,CAACC,OAAP;AAAA,iDAAiB,WAAqCN,QAArC,EAA+CO,WAA/C,EAA4D;AAC3E,QAAIP,QAAJ,EAAc;AACZ,YAAMQ,QAAQ,GAAGZ,IAAI,CAACa,IAAL,CAAUF,WAAV,EAAuBP,QAAvB,CAAjB;AACA,YAAMU,YAAY,SAASX,UAAU,CAACS,QAAD,CAArC;;AACA,UAAI,CAACE,YAAL,EAAmB;AACjB,cAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACD,aAAOH,QAAP;AACD;;AAED,UAAMI,WAAW,GAAGhB,IAAI,CAACa,IAAL,CAAUF,WAAV,EAAuB,gBAAvB,CAApB;AACA,UAAMM,YAAY,GAAGjB,IAAI,CAACa,IAAL,CAAUF,WAAV,EAAuB,iBAAvB,CAArB;AACA,UAAMO,YAAY,GAAGlB,IAAI,CAACa,IAAL,CAAUF,WAAV,EAAuB,iBAAvB,CAArB;AACA,UAAMQ,UAAU,GAAGnB,IAAI,CAACa,IAAL,CAAUF,WAAV,EAAuB,eAAvB,CAAnB;AACA,UAAMS,UAAU,GAAGpB,IAAI,CAACa,IAAL,CAAUF,WAAV,EAAuB,eAAvB,CAAnB;;AAd2E,qCAgBnCU,OAAO,CAACC,GAAR,CAAY,CAClDnB,UAAU,CAACe,YAAD,CADwC,EAElDf,UAAU,CAACa,WAAD,CAFwC,EAGlDb,UAAU,CAACc,YAAD,CAHwC,EAIlDd,UAAU,CAACgB,UAAD,CAJwC,EAKlDhB,UAAU,CAACiB,UAAD,CALwC,CAAZ,CAhBmC;AAAA;AAAA,UAgBpEG,IAhBoE;AAAA,UAgB9DC,GAhB8D;AAAA,UAgBzDC,IAhByD;AAAA,UAgBnDC,EAhBmD;AAAA,UAgB/CC,EAhB+C;;AAuB3E,QAAIH,GAAJ,EAAS;AACP,aAAOR,WAAP;AACD,KAFD,MAEO,IAAIS,IAAJ,EAAU;AACf,aAAOR,YAAP;AACD,KAFM,MAEA,IAAIM,IAAJ,EAAU;AACf,aAAOL,YAAP;AACD,KAFM,MAEA,IAAIQ,EAAJ,EAAQ;AACb,aAAOP,UAAP;AACD,KAFM,MAEA,IAAIQ,EAAJ,EAAQ;AACb,aAAOP,UAAP;AACD;;AACD,UAAM,IAAIL,KAAJ,CAAU,wDAAV,CAAN;AACD,GAnCD;;AAAA,WAAgCa,qBAAhC;AAAA;AAAA;;AAAA,SAAgCA,qBAAhC;AAAA","sourcesContent":["'use strict';\n\nconst path = require('path');\nconst fs = require('fs-extra');\n\nconst fileExists = async (filename) => {\n  try {\n    const stat = await fs.lstat(filename);\n    return stat.isFile();\n  } catch (error) {\n    return false;\n  }\n};\n\nmodule.exports = async function getServerlessFilePath(filename, servicePath) {\n  if (filename) {\n    const filePath = path.join(servicePath, filename);\n    const customExists = await fileExists(filePath);\n    if (!customExists) {\n      throw new Error('Could not find serverless service definition file.');\n    }\n    return filePath;\n  }\n\n  const ymlFilePath = path.join(servicePath, 'serverless.yml');\n  const yamlFilePath = path.join(servicePath, 'serverless.yaml');\n  const jsonFilePath = path.join(servicePath, 'serverless.json');\n  const jsFilePath = path.join(servicePath, 'serverless.js');\n  const tsFilePath = path.join(servicePath, 'serverless.ts');\n\n  const [json, yml, yaml, js, ts] = await Promise.all([\n    fileExists(jsonFilePath),\n    fileExists(ymlFilePath),\n    fileExists(yamlFilePath),\n    fileExists(jsFilePath),\n    fileExists(tsFilePath),\n  ]);\n  if (yml) {\n    return ymlFilePath;\n  } else if (yaml) {\n    return yamlFilePath;\n  } else if (json) {\n    return jsonFilePath;\n  } else if (js) {\n    return jsFilePath;\n  } else if (ts) {\n    return tsFilePath;\n  }\n  throw new Error('Could not find any serverless service definition file.');\n};\n"],"file":"getServerlessFilePath.js"}