{"version":3,"sources":["../../lib/utils.js"],"names":["upperFirst","str","charAt","toUpperCase","slice","pickResourceType","template","resourcesType","resources","Object","keys","Resources","key","resource","Type","push","API_GATEWAY_FILTER_PATTERN","API_GATEWAY_V2_FILTER_PATTERN","LAMBDA_FILTER_PATTERN","API_GATEWAY_LOG_FORMAT","requestTime","requestId","apiId","resourceId","resourcePath","path","httpMethod","status","authLatency","integrationLatency","integrationStatus","responseLatency","responseLength","errorMessage","format","version","API_GATEWAY_V2_LOG_FORMAT","stage","module","exports"],"mappings":"AAAA;;AAEA,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAArC;AACD;;AAED,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,aAApC,EAAmD;AACjD,QAAMC,SAAS,GAAG,EAAlB;;AACA,kCAAkBC,MAAM,CAACC,IAAP,CAAYJ,QAAQ,CAACK,SAArB,CAAlB,kCAAmD;AAA9C,UAAMC,GAAG,mBAAT;AACH,UAAMC,QAAQ,GAAGP,QAAQ,CAACK,SAAT,CAAmBC,GAAnB,CAAjB;;AACA,QAAIC,QAAQ,CAACC,IAAT,KAAkBP,aAAtB,EAAqC;AACnCC,MAAAA,SAAS,CAACO,IAAV,CAAe;AACbH,QAAAA,GADa;AAEbC,QAAAA;AAFa,OAAf;AAID;AACF;;AACD,SAAOL,SAAP;AACD;;AAED,MAAMQ,0BAA0B,GAAG,kBAAnC;AACA,MAAMC,6BAA6B,GAAG,oBAAtC;AACA,MAAMC,qBAAqB,GAAG,gDAA9B;AACA,MAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,WAAW,EAAE,sBADgB;AAE7BC,EAAAA,SAAS,EAAE,oBAFkB;AAG7BC,EAAAA,KAAK,EAAE,gBAHsB;AAI7BC,EAAAA,UAAU,EAAE,qBAJiB;AAK7BC,EAAAA,YAAY,EAAE,uBALe;AAM7BC,EAAAA,IAAI,EAAE,eANuB;AAO7BC,EAAAA,UAAU,EAAE,qBAPiB;AAQ7BC,EAAAA,MAAM,EAAE,iBARqB;AAS7BC,EAAAA,WAAW,EAAE,wCATgB;AAU7BC,EAAAA,kBAAkB,EAAE,6BAVS;AAW7BC,EAAAA,iBAAiB,EAAE,4BAXU;AAY7BC,EAAAA,eAAe,EAAE,0BAZY;AAa7BC,EAAAA,cAAc,EAAE,yBAba;AAc7BC,EAAAA,YAAY,EAAE,wBAde;AAe7BC,EAAAA,MAAM,EAAE,gBAfqB;AAgB7BC,EAAAA,OAAO,EAAE;AAhBoB,CAA/B;AAkBA,MAAMC,yBAAyB,GAAG;AAChChB,EAAAA,WAAW,EAAE,sBADmB;AAEhCC,EAAAA,SAAS,EAAE,oBAFqB;AAGhCC,EAAAA,KAAK,EAAE,gBAHyB;AAIhCE,EAAAA,YAAY,EAAE,mBAJkB;AAKhCC,EAAAA,IAAI,EAAE,eAL0B;AAMhCC,EAAAA,UAAU,EAAE,qBANoB;AAOhCW,EAAAA,KAAK,EAAE,gBAPyB;AAQhCV,EAAAA,MAAM,EAAE,iBARwB;AAShCG,EAAAA,iBAAiB,EAAE,4BATa;AAUhCD,EAAAA,kBAAkB,EAAE,6BAVY;AAWhCE,EAAAA,eAAe,EAAE,0BAXe;AAYhCC,EAAAA,cAAc,EAAE,yBAZgB;AAahCC,EAAAA,YAAY,EAAE,wBAbkB;AAchCC,EAAAA,MAAM,EAAE,kBAdwB;AAehCC,EAAAA,OAAO,EAAE;AAfuB,CAAlC;AAkBAG,MAAM,CAACC,OAAP,GAAiB;AACfvC,EAAAA,UADe;AAEfK,EAAAA,gBAFe;AAGfW,EAAAA,0BAHe;AAIfC,EAAAA,6BAJe;AAKfC,EAAAA,qBALe;AAMfC,EAAAA,sBANe;AAOfiB,EAAAA;AAPe,CAAjB","sourcesContent":["'use strict';\n\nfunction upperFirst(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction pickResourceType(template, resourcesType) {\n  const resources = [];\n  for (const key of Object.keys(template.Resources)) {\n    const resource = template.Resources[key];\n    if (resource.Type === resourcesType) {\n      resources.push({\n        key,\n        resource,\n      });\n    }\n  }\n  return resources;\n}\n\nconst API_GATEWAY_FILTER_PATTERN = '\"SLS_ACCESS_LOG\"';\nconst API_GATEWAY_V2_FILTER_PATTERN = '\"SLS_HTTP_API_LOG\"';\nconst LAMBDA_FILTER_PATTERN = '?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"';\nconst API_GATEWAY_LOG_FORMAT = {\n  requestTime: '$context.requestTime',\n  requestId: '$context.requestId',\n  apiId: '$context.apiId',\n  resourceId: '$context.resourceId',\n  resourcePath: '$context.resourcePath',\n  path: '$context.path',\n  httpMethod: '$context.httpMethod',\n  status: '$context.status',\n  authLatency: '$context.authorizer.integrationLatency',\n  integrationLatency: '$context.integrationLatency',\n  integrationStatus: '$context.integrationStatus',\n  responseLatency: '$context.responseLatency',\n  responseLength: '$context.responseLength',\n  errorMessage: '$context.error.message',\n  format: 'SLS_ACCESS_LOG',\n  version: '1.0.0',\n};\nconst API_GATEWAY_V2_LOG_FORMAT = {\n  requestTime: '$context.requestTime',\n  requestId: '$context.requestId',\n  apiId: '$context.apiId',\n  resourcePath: '$context.routeKey',\n  path: '$context.path',\n  httpMethod: '$context.httpMethod',\n  stage: '$context.stage',\n  status: '$context.status',\n  integrationStatus: '$context.integrationStatus',\n  integrationLatency: '$context.integrationLatency',\n  responseLatency: '$context.responseLatency',\n  responseLength: '$context.responseLength',\n  errorMessage: '$context.error.message',\n  format: 'SLS_HTTP_API_LOG',\n  version: '1.0.0',\n};\n\nmodule.exports = {\n  upperFirst,\n  pickResourceType,\n  API_GATEWAY_FILTER_PATTERN,\n  API_GATEWAY_V2_FILTER_PATTERN,\n  LAMBDA_FILTER_PATTERN,\n  API_GATEWAY_LOG_FORMAT,\n  API_GATEWAY_V2_LOG_FORMAT,\n};\n"],"file":"utils.js"}