{"version":3,"sources":["../../../../lib/safeguards/policies/forbid-s3-http-access.js"],"names":["require","entries","module","exports","forbidS3HttpAccessPolicy","policy","service","failed","Resources","compiled","buckets","Map","filter","Type","bucketPolicies","bucketName","bucket","foundMatchingPolicy","bucketPolicy","Properties","Bucket","Ref","Name","PolicyDocument","Statement","length","Action","Effect","Principal","Resource","Condition","Bool","fail","approve","docs"],"mappings":"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","sourcesContent":["'use strict';\n\nconst { entries } = require('lodash');\n\nmodule.exports = function forbidS3HttpAccessPolicy(policy, service) {\n  let failed = false;\n  const {\n    compiled: {\n      'cloudformation-template-update-stack.json': { Resources },\n    },\n  } = service;\n\n  const buckets = new Map(entries(Resources).filter(([, { Type }]) => Type === 'AWS::S3::Bucket'));\n  const bucketPolicies = new Map(\n    entries(Resources).filter(([, { Type }]) => Type === 'AWS::S3::BucketPolicy')\n  );\n  for (const [bucketName, bucket] of buckets) {\n    let foundMatchingPolicy = false;\n    for (const [, bucketPolicy] of bucketPolicies) {\n      if (\n        bucketPolicy.Properties &&\n        (bucketPolicy.Properties.Bucket && bucketPolicy.Properties.Bucket.Ref\n          ? bucketPolicy.Properties.Bucket.Ref === bucketName\n          : bucketPolicy.Properties.Bucket === bucket.Properties.Name) &&\n        bucketPolicy.PolicyDocument &&\n        bucketPolicy.PolicyDocument.Statement.length &&\n        bucketPolicy.PolicyDocument.Statement[0].Action === 's3:*' &&\n        bucketPolicy.PolicyDocument.Statement[0].Effect === 'Deny' &&\n        bucketPolicy.PolicyDocument.Statement[0].Principal === '*' &&\n        (bucketPolicy.PolicyDocument.Statement[0].Resource &&\n        bucketPolicy.PolicyDocument.Statement[0].Resource['Fn::Join']\n          ? bucketPolicy.PolicyDocument.Statement[0].Resource['Fn::Join'].length === 2 &&\n            bucketPolicy.PolicyDocument.Statement[0].Resource['Fn::Join'][0] === '' &&\n            bucketPolicy.PolicyDocument.Statement[0].Resource['Fn::Join'][1].length === 3 &&\n            bucketPolicy.PolicyDocument.Statement[0].Resource['Fn::Join'][1][0] ===\n              'arn:aws:s3:::' &&\n            bucketPolicy.PolicyDocument.Statement[0].Resource['Fn::Join'][1][1].Ref ===\n              bucketName &&\n            bucketPolicy.PolicyDocument.Statement[0].Resource['Fn::Join'][1][2] === '/*'\n          : bucketPolicy.PolicyDocument.Statement[0].Resource ===\n            `arn:aws:s3:::${bucket.Properties.Name}/*`) &&\n        bucketPolicy.PolicyDocument.Statement[0].Condition &&\n        bucketPolicy.PolicyDocument.Statement[0].Condition.Bool &&\n        bucketPolicy.PolicyDocument.Statement[0].Condition.Bool['aws:SecureTransport'] === false &&\n        true\n      ) {\n        foundMatchingPolicy = true;\n      }\n    }\n    if (!foundMatchingPolicy) {\n      failed = true;\n      policy.fail(\n        `Bucket \"${bucketName}\" doesn't have a BucketPolicy forbidding unsecure HTTP access.`\n      );\n    }\n  }\n\n  if (!failed) {\n    policy.approve();\n  }\n};\n\nmodule.exports.docs = 'http://slss.io/sg-forbid-s3-http-access';\n"],"file":"forbid-s3-http-access.js"}