{"version":3,"sources":["../../../lib/interactiveCli/index.js"],"names":["chalk","require","getLoggedInUser","getMetadata","configureDeployProfile","register","setApp","module","exports","ctx","hooks","sls","config","servicePath","interactiveCli","processedInput","options","org","app","supportedRuntimes","supportedRegions","service","provider","name","classes","Error","includes","runtime","getRegion","registerCheck","check","process","stdout","write","run","setAppCheck","green","user","getProvider","bold"],"mappings":"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","sourcesContent":["'use strict';\n\nconst chalk = require('chalk');\nconst { getLoggedInUser } = require('@serverless/platform-sdk');\n\nconst { getMetadata } = require('@serverless/platform-sdk');\nconst { configureDeployProfile } = require('../deployProfile');\nconst register = require('./register');\nconst setApp = require('./set-app');\n\nmodule.exports = (ctx) => {\n  const hooks = {\n    'initialize': async () => {\n      if (!ctx.sls.config.servicePath || !ctx.sls.interactiveCli) {\n        return;\n      }\n      if (ctx.sls.processedInput.options.org || ctx.sls.processedInput.options.app) {\n        const { supportedRuntimes, supportedRegions } = await getMetadata();\n        if (ctx.sls.service.provider.name !== 'aws') {\n          throw new ctx.sls.classes.Error(\n            `Sorry, the provider ${ctx.sls.service.provider.name} is not yet supported by the dashboard. Check out the docs at http://slss.io/dashboard-requirements\" for supported providers.`\n          );\n        }\n        if (!supportedRuntimes.includes(ctx.sls.service.provider.runtime || 'nodejs12.x')) {\n          throw new ctx.sls.classes.Error(\n            `Sorry, the runtime ${ctx.sls.service.provider.runtime} is not yet supported by the dashboard. Check out the docs at http://slss.io/dashboard-requirements\" for supported providers.`\n          );\n        }\n        if (!supportedRegions.includes(ctx.provider.getRegion())) {\n          throw new ctx.sls.classes.Error(\n            `Sorry, the region ${ctx.provider.getRegion()} is not yet supported by the dashboard. Check out the docs at http://slss.io/dashboard-requirements\" for supported providers.`\n          );\n        }\n      }\n    },\n    'before:interactiveCli:setupAws': async () => {\n      const registerCheck = await register.check(ctx.sls);\n      if (registerCheck) {\n        process.stdout.write('\\n');\n        await register.run(ctx.sls, registerCheck);\n      }\n      const setAppCheck = await setApp.check(ctx.sls);\n      if (setAppCheck) {\n        process.stdout.write('\\n');\n        await setApp.run(ctx.sls, setAppCheck);\n      }\n      if ((registerCheck || setAppCheck) && ctx.sls.service.app && ctx.sls.service.org) {\n        process.stdout.write(`\n${chalk.green('Your project is setup for monitoring, troubleshooting and testing')}\n`);\n        // setup deploy if user already logged in so that AWS creds check in SFO works right\n        // & temporarily add provider to ctx to fetch deploy profile\n        const user = getLoggedInUser();\n        if (user) await configureDeployProfile({ ...ctx, provider: ctx.sls.getProvider('aws') });\n      }\n    },\n    'interactiveCli:end': async () => {\n      if (ctx.sls.service.app && ctx.sls.service.org) {\n        process.stdout.write(`\n${chalk.bold('Deploy your project and monitor, troubleshoot and test it:')}\n- Run “serverless deploy” to deploy your service.\n- Run “serverless dashboard” to view the dashboard.\n\n`);\n      }\n    },\n  };\n\n  return hooks;\n};\n"],"file":"index.js"}