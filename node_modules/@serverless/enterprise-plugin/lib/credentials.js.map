{"version":3,"sources":["../../lib/credentials.js"],"names":["require","getCredentials","getAccessKeyForTenant","module","exports","ctx","process","env","SLS_CLOUD_ACCESS","accessKey","sls","service","org","stageName","provider","getStage","command","processedInput","commands","app","tenant","getServiceName","accessKeyId","secretAccessKey","sessionToken","AWS_ACCESS_KEY_ID","AWS_SECRET_ACCESS_KEY","AWS_SESSION_TOKEN","cli","log"],"mappings":"AAAA;;;;;;iBAEkDA,OAAO,CAAC,0BAAD,C;MAAjDC,c,YAAAA,c;MAAgBC,qB,YAAAA,qB;;AAExBC,MAAM,CAACC,OAAP;AAAA,+BAAiB,WAAgBC,GAAhB,EAAqB;AACpC,QAAI,CAACC,OAAO,CAACC,GAAR,CAAYC,gBAAjB,EAAmC;AACjC;AACD;;AAED,UAAMC,SAAS,SAASP,qBAAqB,CAACG,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBC,GAAjB,CAA7C;;AALoC,wCAOyBX,cAAc,CAAC;AAC1EQ,MAAAA,SAD0E;AAE1EI,MAAAA,SAAS,EAAER,GAAG,CAACS,QAAJ,CAAaC,QAAb,EAF+D;AAG1EC,MAAAA,OAAO,EAAEX,GAAG,CAACK,GAAJ,CAAQO,cAAR,CAAuBC,QAAvB,CAAgC,CAAhC,CAHiE;AAI1EC,MAAAA,GAAG,EAAEd,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBQ,GAJqD;AAK1EC,MAAAA,MAAM,EAAEf,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBC,GALkD;AAM1ED,MAAAA,OAAO,EAAEN,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBU,cAAhB;AANiE,KAAD,CAPvC;AAAA,UAO5BC,WAP4B,yBAO5BA,WAP4B;AAAA,UAOfC,eAPe,yBAOfA,eAPe;AAAA,UAOEC,YAPF,yBAOEA,YAPF;;AAepClB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,iBAAZ,GAAgCH,WAAhC;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,qBAAZ,GAAoCH,eAApC;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,iBAAZ,GAAgCH,YAAhC;AACAnB,IAAAA,GAAG,CAACK,GAAJ,CAAQkB,GAAR,CAAYC,GAAZ,CAAgB,iDAAhB;AACD,GAnBD;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["'use strict';\n\nconst { getCredentials, getAccessKeyForTenant } = require('@serverless/platform-sdk');\n\nmodule.exports = async function (ctx) {\n  if (!process.env.SLS_CLOUD_ACCESS) {\n    return;\n  }\n\n  const accessKey = await getAccessKeyForTenant(ctx.sls.service.org);\n\n  const { accessKeyId, secretAccessKey, sessionToken } = await getCredentials({\n    accessKey,\n    stageName: ctx.provider.getStage(),\n    command: ctx.sls.processedInput.commands[0],\n    app: ctx.sls.service.app,\n    tenant: ctx.sls.service.org,\n    service: ctx.sls.service.getServiceName(),\n  });\n  process.env.AWS_ACCESS_KEY_ID = accessKeyId;\n  process.env.AWS_SECRET_ACCESS_KEY = secretAccessKey;\n  process.env.AWS_SESSION_TOKEN = sessionToken;\n  ctx.sls.cli.log('Cloud credentials set from Serverless Platform.');\n};\n"],"file":"credentials.js"}