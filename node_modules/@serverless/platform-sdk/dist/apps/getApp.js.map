{"version":3,"sources":["../../src/apps/getApp.js"],"names":["getApp","data","token","tenant","platformConfig","backendUrl","app","method","headers","Authorization","response","json"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA;AAAA,qEAAS,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,iBADO,GACGD,IADH,CACPC,KADO;;AAAA,gBAGRA,KAHQ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIG,uCAAsBD,KAAKE,MAA3B,CAJH;;AAAA;AAIXD,iBAJW;;AAAA;AAAA;AAAA,mBAOU,qBACpB,GAAEE,iBAAeC,UAAW,WAAUJ,KAAKE,MAAO,iBAAgBF,KAAKK,GAAI,EADvD,EAErB;AACEC,sBAAQ,KADV;AAEEC,uBAAS;AACPC,+BAAgB,UAASP,KAAM;AADxB;AAFX,aAFqB,CAPV;;AAAA;AAOPQ,oBAPO;AAAA,6CAiBNA,SAASC,IAAT,EAjBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAT;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAoBeX,M","file":"getApp.js","sourcesContent":["import fetch from '../fetch'\nimport platformConfig from '../config'\nimport { getAccessKeyForTenant } from '../accessKeys'\n\nconst getApp = async (data) => {\n  let { token } = data\n\n  if (!token) {\n    token = await getAccessKeyForTenant(data.tenant)\n  }\n\n  const response = await fetch(\n    `${platformConfig.backendUrl}tenants/${data.tenant}/applications/${data.app}`,\n    {\n      method: 'GET',\n      headers: {\n        Authorization: `bearer ${token}`\n      }\n    }\n  )\n\n  return response.json()\n}\n\nexport default getApp\n"]}